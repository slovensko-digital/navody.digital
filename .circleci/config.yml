version: 2
jobs:
  build:
    working_directory: ~/slovensko-digital/navody.slovensko.digital

    docker:
      - image: circleci/ruby:2.5.3-node-browsers
        environment:
          RAILS_ENV: test
          CC_TEST_REPORTER_ID: 17d259e00bbff5b020b7f1a6abb6736e0f65b9a517afdcbaeaa79e919730835f

      - image: circleci/postgres:10-alpine-ram
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_PASSWORD: ''

    steps:
      - checkout
      - run: echo "deb http://apt.postgresql.org/pub/repos/apt stretch-pgdg main" | sudo tee -a /etc/apt/sources.list.d/pgdg.list
      - run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client-10
      - restore_cache: { keys: ['{{ checksum "Gemfile.lock" }}'] }
      - run: bundle install --path vendor/bundle
      - save_cache: { key: '{{ checksum "Gemfile.lock" }}', paths: [vendor/bundle] }
      - run: dockerize -wait tcp://localhost:5432 -timeout 60s
      - run: mv .circleci/database.yml config/database.yml
      - run: bundle exec rake db:create db:structure:load --trace
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests
          command: |
            ./cc-test-reporter before-build
            bundle exec rspec --format progress --format RspecJunitFormatter --out test_results/rspec.xml
            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?
      - store_test_results:
          path: test_results

  deploy:
    working_directory: ~/slovensko-digital/navody.slovensko.digital
    machine:
      enabled: true
    steps:
      - checkout
      - run: git remote add staging dokku@ekosystem.staging.slovensko.digital:navody
      - run: git push staging

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
